// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250930122828_AddImagesEntityAndUpdates")]
    partial class AddImagesEntityAndUpdates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.Entities.ImagesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GUID")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<int>("PolygonEntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PolygonEntityId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("backend.Entities.PolygonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<Polygon>("Geometry")
                        .HasColumnType("geometry (Polygon, 4326)");

                    b.Property<string>("aciklama")
                        .HasColumnType("text");

                    b.Property<int>("daire_sayisi")
                        .HasColumnType("integer");

                    b.Property<string>("numarataj")
                        .HasColumnType("text");

                    b.Property<string>("tur")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Polygons");
                });

            modelBuilder.Entity("backend.Entities.ImagesEntity", b =>
                {
                    b.HasOne("backend.Entities.PolygonEntity", "Polygon")
                        .WithMany("resimler")
                        .HasForeignKey("PolygonEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Polygon");
                });

            modelBuilder.Entity("backend.Entities.PolygonEntity", b =>
                {
                    b.Navigation("resimler");
                });
#pragma warning restore 612, 618
        }
    }
}
